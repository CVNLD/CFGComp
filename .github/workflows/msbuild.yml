name: MSBuild
on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]
env:
  SOLUTION_FILE_PATH: ./CFGComp.sln
  BUILD_CONFIGURATION: Release
permissions:
  contents: write
jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    - name: Restore NuGet packages
      working-directory: ${{github.workspace}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}
    - name: Build
      working-directory: ${{github.workspace}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
    - name: List build output
      run: |
        Get-ChildItem -Path "${{github.workspace}}" -Recurse -Filter "*.exe"
    - name: Find executable
      run: |
        $exePath = Get-ChildItem -Path "${{github.workspace}}" -Recurse -Filter "CFGComp.exe" | Select-Object -First 1 -ExpandProperty FullName
        if ($exePath) {
          echo "Executable found at $exePath"
          echo "EXE_PATH=$exePath" >> $env:GITHUB_ENV
        } else {
          echo "Executable not found"
          exit 1
        }
    - name: Debug Info
      run: |
        echo "Current ref: ${{ github.ref }}"
        echo "Is this a tag? ${{ startsWith(github.ref, 'refs/tags/') }}"
        echo "Executable path: ${{ env.EXE_PATH }}"
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        $tag = $env:GITHUB_REF.Replace('refs/tags/', '')
        $releaseName = "Release $tag"
        $releaseNotes = "Automated release for version $tag"
        
        $releaseData = @{
          tag_name = $tag
          name = $releaseName
          body = $releaseNotes
          draft = $false
          prerelease = $false
        } | ConvertTo-Json
        
        $response = Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/releases" -Method Post -Headers @{
          Authorization = "token ${{ secrets.GITHUB_TOKEN }}"
          "Content-Type" = "application/json"
        } -Body $releaseData
        
        $uploadUrl = $response.upload_url -replace '{.*}', ''
        
        Invoke-RestMethod -Uri "${uploadUrl}?name=CFGComp.exe" -Method Post -Headers @{
          Authorization = "token ${{ secrets.GITHUB_TOKEN }}"
          "Content-Type" = "application/octet-stream"
        } -InFile ${{ env.EXE_PATH }}
    - name: Upload artifact for debugging
      uses: actions/upload-artifact@v2
      with:
        name: CFGComp-executable
        path: ${{ env.EXE_PATH }}
